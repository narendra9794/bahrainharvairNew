//// <auto-generated />
//using System;
//using Bahrin.Harbour.Data.DataContext;
//using Microsoft.EntityFrameworkCore;
//using Microsoft.EntityFrameworkCore.Infrastructure;
//using Microsoft.EntityFrameworkCore.Metadata;
//using Microsoft.EntityFrameworkCore.Migrations;
//using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

//#nullable disable

//namespace Bahrin.Harbour.Data.Migrations
//{
//    [DbContext(typeof(BahrinHarbourContext))]
//    [Migration("20241024073435_sdsass")]
//    partial class sdsass
//    {
//        /// <inheritdoc />
//        protected override void BuildTargetModel(ModelBuilder modelBuilder)
//        {
//#pragma warning disable 612, 618
//            modelBuilder
//                .HasAnnotation("ProductVersion", "8.0.8")
//                .HasAnnotation("Relational:MaxIdentifierLength", 64);

//            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

//            modelBuilder.Entity("Bahrin.Harbour.Data.DBCollections.ApplicationUser", b =>
//                {
//                    b.Property<string>("Id")
//                        .HasColumnType("varchar(255)");

//                    b.Property<int>("AccessFailedCount")
//                        .HasColumnType("int");

//                    b.Property<string>("Address")
//                        .HasColumnType("longtext");

//                    b.Property<string>("City")
//                        .HasColumnType("longtext");

//                    b.Property<string>("ConcurrencyStamp")
//                        .IsConcurrencyToken()
//                        .HasColumnType("longtext");

//                    b.Property<string>("Country")
//                        .HasColumnType("longtext");

//                    b.Property<string>("CreatedBy")
//                        .HasColumnType("longtext");

//                    b.Property<DateTime?>("CreatedOn")
//                        .HasColumnType("datetime(6)");

//                    b.Property<DateTime?>("DateOfBirth")
//                        .HasColumnType("datetime(6)");

//                    b.Property<string>("Email")
//                        .HasMaxLength(256)
//                        .HasColumnType("varchar(256)");

//                    b.Property<bool>("EmailConfirmed")
//                        .HasColumnType("tinyint(1)");

//                    b.Property<string>("FirstName")
//                        .HasColumnType("longtext");

//                    b.Property<bool>("IsActive")
//                        .HasColumnType("tinyint(1)");

//                    b.Property<string>("LastName")
//                        .HasColumnType("longtext");

//                    b.Property<bool>("LockoutEnabled")
//                        .HasColumnType("tinyint(1)");

//                    b.Property<DateTimeOffset?>("LockoutEnd")
//                        .HasColumnType("datetime(6)");

//                    b.Property<string>("ModifiedBy")
//                        .HasColumnType("longtext");

//                    b.Property<DateTime?>("ModifiedOn")
//                        .HasColumnType("datetime(6)");

//                    b.Property<string>("NormalizedEmail")
//                        .HasMaxLength(256)
//                        .HasColumnType("varchar(256)");

//                    b.Property<string>("NormalizedUserName")
//                        .HasMaxLength(256)
//                        .HasColumnType("varchar(256)");

//                    b.Property<Guid?>("OutletId")
//                        .HasColumnType("char(36)");

//                    b.Property<string>("PasswordHash")
//                        .HasColumnType("longtext");

//                    b.Property<string>("PhoneNumber")
//                        .HasColumnType("longtext");

//                    b.Property<bool>("PhoneNumberConfirmed")
//                        .HasColumnType("tinyint(1)");

//                    b.Property<string>("Pin")
//                        .HasColumnType("longtext");

//                    b.Property<string>("ProfileImageFileName")
//                        .HasColumnType("longtext");

//                    b.Property<string>("ProfileImagePathfolder")
//                        .HasColumnType("longtext");

//                    b.Property<string>("Role")
//                        .IsRequired()
//                        .HasColumnType("longtext");

//                    b.Property<string>("SecurityStamp")
//                        .HasColumnType("longtext");

//                    b.Property<string>("State")
//                        .HasColumnType("longtext");

//                    b.Property<bool>("TwoFactorEnabled")
//                        .HasColumnType("tinyint(1)");

//                    b.Property<Guid>("UserGuid")
//                        .HasColumnType("char(36)");

//                    b.Property<string>("UserName")
//                        .HasMaxLength(256)
//                        .HasColumnType("varchar(256)");

//                    b.Property<string>("ZipCode")
//                        .HasColumnType("longtext");

//                    b.HasKey("Id");

//                    b.HasIndex("NormalizedEmail")
//                        .HasDatabaseName("EmailIndex");

//                    b.HasIndex("NormalizedUserName")
//                        .IsUnique()
//                        .HasDatabaseName("UserNameIndex");

//                    b.ToTable("AspNetUsers", (string)null);
//                });

//            modelBuilder.Entity("Bahrin.Harbour.Data.DBCollections.City", b =>
//                {
//                    b.Property<int>("Id")
//                        .ValueGeneratedOnAdd()
//                        .HasColumnType("int");

//                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

//                    b.Property<string>("CountryCode")
//                        .IsRequired()
//                        .HasColumnType("longtext");

//                    b.Property<int>("CountryId")
//                        .HasColumnType("int");

//                    b.Property<string>("CountryName")
//                        .IsRequired()
//                        .HasColumnType("longtext");

//                    b.Property<string>("Name")
//                        .IsRequired()
//                        .HasColumnType("longtext");

//                    b.Property<string>("StateCode")
//                        .IsRequired()
//                        .HasColumnType("longtext");

//                    b.Property<int>("StateId")
//                        .HasColumnType("int");

//                    b.Property<string>("StateName")
//                        .IsRequired()
//                        .HasColumnType("longtext");

//                    b.HasKey("Id");

//                    b.ToTable("Cities");
//                });

//            modelBuilder.Entity("Bahrin.Harbour.Data.DBCollections.Email", b =>
//                {
//                    b.Property<Guid>("Id")
//                        .ValueGeneratedOnAdd()
//                        .HasColumnType("char(36)");

//                    b.Property<bool>("AciveStatus")
//                        .HasColumnType("tinyint(1)");

//                    b.Property<string>("CC")
//                        .IsRequired()
//                        .HasColumnType("longtext");

//                    b.Property<DateTime>("CreatedDate")
//                        .HasColumnType("datetime(6)");

//                    b.Property<Guid>("Createdby")
//                        .HasColumnType("char(36)");

//                    b.Property<DateTime?>("DateModified")
//                        .HasColumnType("datetime(6)");

//                    b.Property<bool>("EnableSSL")
//                        .HasColumnType("tinyint(1)");

//                    b.Property<string>("Host")
//                        .IsRequired()
//                        .HasColumnType("longtext");

//                    b.Property<bool>("IsHTMLBody")
//                        .HasColumnType("tinyint(1)");

//                    b.Property<Guid?>("ModifiedBy")
//                        .HasColumnType("char(36)");

//                    b.Property<string>("Password")
//                        .IsRequired()
//                        .HasColumnType("longtext");

//                    b.Property<int>("Port")
//                        .HasColumnType("int");

//                    b.Property<string>("SenderAddress")
//                        .IsRequired()
//                        .HasColumnType("longtext");

//                    b.Property<string>("SenderDisplayName")
//                        .IsRequired()
//                        .HasColumnType("longtext");

//                    b.Property<string>("TestEmailTo")
//                        .IsRequired()
//                        .HasColumnType("longtext");

//                    b.Property<bool>("UseDefaultCredentials")
//                        .HasColumnType("tinyint(1)");

//                    b.Property<string>("UserName")
//                        .IsRequired()
//                        .HasColumnType("longtext");

//                    b.HasKey("Id");

//                    b.ToTable("Email");
//                });

//            modelBuilder.Entity("Bahrin.Harbour.Data.DBCollections.LoyaltyCard", b =>
//                {
//                    b.Property<Guid>("Id")
//                        .ValueGeneratedOnAdd()
//                        .HasColumnType("char(36)");

//                    b.Property<bool>("AciveStatus")
//                        .HasColumnType("tinyint(1)");

//                    b.Property<Guid?>("ClientGuid")
//                        .HasColumnType("char(36)");

//                    b.Property<int>("ClientId")
//                        .HasColumnType("int");

//                    b.Property<string>("ClientName")
//                        .HasColumnType("longtext");

//                    b.Property<string>("ContactNumber")
//                        .HasColumnType("longtext");

//                    b.Property<DateTime>("CreatedDate")
//                        .HasColumnType("datetime(6)");

//                    b.Property<Guid>("Createdby")
//                        .HasColumnType("char(36)");

//                    b.Property<DateTime?>("DateModified")
//                        .HasColumnType("datetime(6)");

//                    b.Property<string>("Email")
//                        .HasColumnType("longtext");

//                    b.Property<DateTime?>("ExpireDate")
//                        .HasColumnType("datetime(6)");

//                    b.Property<Guid?>("ModifiedBy")
//                        .HasColumnType("char(36)");

//                    b.HasKey("Id");

//                    b.ToTable("LoyaltyCards");
//                });

//            modelBuilder.Entity("Bahrin.Harbour.Data.DBCollections.Outlet", b =>
//                {
//                    b.Property<Guid>("Id")
//                        .ValueGeneratedOnAdd()
//                        .HasColumnType("char(36)");

//                    b.Property<bool>("AciveStatus")
//                        .HasColumnType("tinyint(1)");

//                    b.Property<string>("Address")
//                        .IsRequired()
//                        .HasColumnType("longtext");

//                    b.Property<string>("City")
//                        .IsRequired()
//                        .HasColumnType("longtext");

//                    b.Property<string>("ContactPersonEmail")
//                        .HasColumnType("longtext");

//                    b.Property<string>("ContactPersonName")
//                        .HasColumnType("longtext");

//                    b.Property<string>("ContactPersonPhoneNumber")
//                        .HasColumnType("longtext");

//                    b.Property<string>("Country")
//                        .IsRequired()
//                        .HasColumnType("longtext");

//                    b.Property<DateTime>("CreatedDate")
//                        .HasColumnType("datetime(6)");

//                    b.Property<Guid>("Createdby")
//                        .HasColumnType("char(36)");

//                    b.Property<DateTime?>("DateModified")
//                        .HasColumnType("datetime(6)");

//                    b.Property<decimal>("DiscountPercentage")
//                        .HasColumnType("decimal(5, 2)");

//                    b.Property<Guid?>("ModifiedBy")
//                        .HasColumnType("char(36)");

//                    b.Property<string>("Name")
//                        .IsRequired()
//                        .HasColumnType("longtext");

//                    b.Property<string>("OutletImageFolderName")
//                        .HasColumnType("longtext");

//                    b.Property<string>("OutletImageName")
//                        .HasColumnType("longtext");

//                    b.Property<Guid?>("RepresentativeId")
//                        .HasColumnType("char(36)");

//                    b.Property<string>("State")
//                        .IsRequired()
//                        .HasColumnType("longtext");

//                    b.HasKey("Id");

//                    b.ToTable("Outlets");
//                });

//            modelBuilder.Entity("Bahrin.Harbour.Data.DBCollections.Property", b =>
//                {
//                    b.Property<Guid>("Id")
//                        .ValueGeneratedOnAdd()
//                        .HasColumnType("char(36)");

//                    b.Property<bool>("AciveStatus")
//                        .HasColumnType("tinyint(1)");

//                    b.Property<string>("Address")
//                        .HasColumnType("longtext");

//                    b.Property<string>("City")
//                        .HasColumnType("longtext");

//                    b.Property<Guid?>("ClientId")
//                        .HasColumnType("char(36)");

//                    b.Property<Guid?>("ClientUserId")
//                        .HasColumnType("char(36)");

//                    b.Property<string>("Country")
//                        .HasColumnType("longtext");

//                    b.Property<DateTime>("CreatedDate")
//                        .HasColumnType("datetime(6)");

//                    b.Property<Guid>("Createdby")
//                        .HasColumnType("char(36)");

//                    b.Property<DateTime?>("DateModified")
//                        .HasColumnType("datetime(6)");

//                    b.Property<Guid?>("ModifiedBy")
//                        .HasColumnType("char(36)");

//                    b.Property<long?>("PropertyPrice")
//                        .HasColumnType("bigint");

//                    b.Property<string>("State")
//                        .HasColumnType("longtext");

//                    b.Property<string>("TypeOfProperty")
//                        .HasColumnType("longtext");

//                    b.Property<string>("UploadedImageFolderName")
//                        .HasColumnType("longtext");

//                    b.Property<string>("UploadedImageName")
//                        .HasColumnType("longtext");

//                    b.HasKey("Id");

//                    b.HasIndex("ClientId");

//                    b.ToTable("Properties");
//                });

//            modelBuilder.Entity("Bahrin.Harbour.Data.DBCollections.UserOutletRelation", b =>
//                {
//                    b.Property<Guid>("UserId")
//                        .HasColumnType("char(36)");

//                    b.Property<Guid>("OutletId")
//                        .HasColumnType("char(36)");

//                    b.HasKey("UserId", "OutletId");

//                    b.HasIndex("OutletId");

//                    b.ToTable("UserOutletRelations");
//                });

//            modelBuilder.Entity("Bahrin.Harbour.Data.DBCollections.VisitHistory", b =>
//                {
//                    b.Property<Guid>("Id")
//                        .ValueGeneratedOnAdd()
//                        .HasColumnType("char(36)");

//                    b.Property<bool>("AciveStatus")
//                        .HasColumnType("tinyint(1)");

//                    b.Property<bool>("Checkin")
//                        .HasColumnType("tinyint(1)");

//                    b.Property<DateTime?>("CheckinDate")
//                        .HasColumnType("datetime(6)");

//                    b.Property<Guid>("ClientId")
//                        .HasColumnType("char(36)");

//                    b.Property<string>("Comments")
//                        .HasColumnType("longtext");

//                    b.Property<DateTime>("CreatedDate")
//                        .HasColumnType("datetime(6)");

//                    b.Property<Guid>("Createdby")
//                        .HasColumnType("char(36)");

//                    b.Property<DateTime?>("DateModified")
//                        .HasColumnType("datetime(6)");

//                    b.Property<int?>("Discount")
//                        .HasColumnType("int");

//                    b.Property<Guid?>("ModifiedBy")
//                        .HasColumnType("char(36)");

//                    b.Property<Guid?>("OutletId")
//                        .HasColumnType("char(36)");

//                    b.Property<Guid?>("RepresentativeId")
//                        .HasColumnType("char(36)");

//                    b.Property<bool>("Visited")
//                        .HasColumnType("tinyint(1)");

//                    b.Property<DateTime>("VisitedDate")
//                        .HasColumnType("datetime(6)");

//                    b.HasKey("Id");

//                    b.ToTable("VisitHistory");
//                });

//            modelBuilder.Entity("Bahrin.Harbour.Model.ClientModel.Client", b =>
//                {
//                    b.Property<Guid>("Id")
//                        .ValueGeneratedOnAdd()
//                        .HasColumnType("char(36)");

//                    b.Property<bool>("AciveStatus")
//                        .HasColumnType("tinyint(1)");

//                    b.Property<string>("Address")
//                        .IsRequired()
//                        .HasColumnType("longtext");

//                    b.Property<string>("City")
//                        .HasColumnType("longtext");

//                    b.Property<int>("ClientId")
//                        .ValueGeneratedOnAdd()
//                        .HasColumnType("int");

//                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ClientId"));

//                    b.Property<string>("ClientName")
//                        .IsRequired()
//                        .HasColumnType("longtext");

//                    b.Property<string>("ClientProfileImageFileName")
//                        .HasColumnType("longtext");

//                    b.Property<string>("Country")
//                        .HasColumnType("longtext");

//                    b.Property<DateTime>("CreatedDate")
//                        .HasColumnType("datetime(6)");

//                    b.Property<Guid>("Createdby")
//                        .HasColumnType("char(36)");

//                    b.Property<DateTime?>("DateModified")
//                        .HasColumnType("datetime(6)");

//                    b.Property<string>("EmailAddress")
//                        .HasColumnType("longtext");

//                    b.Property<string>("ImageFolderName")
//                        .HasColumnType("longtext");

//                    b.Property<Guid?>("ModifiedBy")
//                        .HasColumnType("char(36)");

//                    b.Property<string>("Name")
//                        .HasColumnType("longtext");

//                    b.Property<string>("Phone")
//                        .HasColumnType("longtext");

//                    b.Property<string>("Postcode")
//                        .IsRequired()
//                        .HasColumnType("longtext");

//                    b.Property<string>("State")
//                        .IsRequired()
//                        .HasColumnType("longtext");

//                    b.Property<bool>("isLoyalityCardGenerated")
//                        .HasColumnType("tinyint(1)");

//                    b.HasKey("Id");

//                    b.ToTable("Clients");
//                });

//            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
//                {
//                    b.Property<string>("Id")
//                        .HasColumnType("varchar(255)");

//                    b.Property<string>("ConcurrencyStamp")
//                        .IsConcurrencyToken()
//                        .HasColumnType("longtext");

//                    b.Property<string>("Name")
//                        .HasMaxLength(256)
//                        .HasColumnType("varchar(256)");

//                    b.Property<string>("NormalizedName")
//                        .HasMaxLength(256)
//                        .HasColumnType("varchar(256)");

//                    b.HasKey("Id");

//                    b.HasIndex("NormalizedName")
//                        .IsUnique()
//                        .HasDatabaseName("RoleNameIndex");

//                    b.ToTable("AspNetRoles", (string)null);
//                });

//            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
//                {
//                    b.Property<int>("Id")
//                        .ValueGeneratedOnAdd()
//                        .HasColumnType("int");

//                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

//                    b.Property<string>("ClaimType")
//                        .HasColumnType("longtext");

//                    b.Property<string>("ClaimValue")
//                        .HasColumnType("longtext");

//                    b.Property<string>("RoleId")
//                        .IsRequired()
//                        .HasColumnType("varchar(255)");

//                    b.HasKey("Id");

//                    b.HasIndex("RoleId");

//                    b.ToTable("AspNetRoleClaims", (string)null);
//                });

//            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
//                {
//                    b.Property<int>("Id")
//                        .ValueGeneratedOnAdd()
//                        .HasColumnType("int");

//                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

//                    b.Property<string>("ClaimType")
//                        .HasColumnType("longtext");

//                    b.Property<string>("ClaimValue")
//                        .HasColumnType("longtext");

//                    b.Property<string>("UserId")
//                        .IsRequired()
//                        .HasColumnType("varchar(255)");

//                    b.HasKey("Id");

//                    b.HasIndex("UserId");

//                    b.ToTable("AspNetUserClaims", (string)null);
//                });

//            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
//                {
//                    b.Property<string>("LoginProvider")
//                        .HasColumnType("varchar(255)");

//                    b.Property<string>("ProviderKey")
//                        .HasColumnType("varchar(255)");

//                    b.Property<string>("ProviderDisplayName")
//                        .HasColumnType("longtext");

//                    b.Property<string>("UserId")
//                        .IsRequired()
//                        .HasColumnType("varchar(255)");

//                    b.HasKey("LoginProvider", "ProviderKey");

//                    b.HasIndex("UserId");

//                    b.ToTable("AspNetUserLogins", (string)null);
//                });

//            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
//                {
//                    b.Property<string>("UserId")
//                        .HasColumnType("varchar(255)");

//                    b.Property<string>("RoleId")
//                        .HasColumnType("varchar(255)");

//                    b.HasKey("UserId", "RoleId");

//                    b.HasIndex("RoleId");

//                    b.ToTable("AspNetUserRoles", (string)null);
//                });

//            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
//                {
//                    b.Property<string>("UserId")
//                        .HasColumnType("varchar(255)");

//                    b.Property<string>("LoginProvider")
//                        .HasColumnType("varchar(255)");

//                    b.Property<string>("Name")
//                        .HasColumnType("varchar(255)");

//                    b.Property<string>("Value")
//                        .HasColumnType("longtext");

//                    b.HasKey("UserId", "LoginProvider", "Name");

//                    b.ToTable("AspNetUserTokens", (string)null);
//                });

//            modelBuilder.Entity("Bahrin.Harbour.Data.DBCollections.Property", b =>
//                {
//                    b.HasOne("Bahrin.Harbour.Model.ClientModel.Client", null)
//                        .WithMany("Properties")
//                        .HasForeignKey("ClientId");
//                });

//            modelBuilder.Entity("Bahrin.Harbour.Data.DBCollections.UserOutletRelation", b =>
//                {
//                    b.HasOne("Bahrin.Harbour.Data.DBCollections.Outlet", "Outlet")
//                        .WithMany("UserOutlets")
//                        .HasForeignKey("OutletId")
//                        .OnDelete(DeleteBehavior.Cascade)
//                        .IsRequired();

//                    b.HasOne("Bahrin.Harbour.Data.DBCollections.ApplicationUser", "User")
//                        .WithMany("UserOutlets")
//                        .HasForeignKey("UserId")
//                        .HasPrincipalKey("UserGuid")
//                        .OnDelete(DeleteBehavior.Cascade)
//                        .IsRequired();

//                    b.Navigation("Outlet");

//                    b.Navigation("User");
//                });

//            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
//                {
//                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
//                        .WithMany()
//                        .HasForeignKey("RoleId")
//                        .OnDelete(DeleteBehavior.Cascade)
//                        .IsRequired();
//                });

//            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
//                {
//                    b.HasOne("Bahrin.Harbour.Data.DBCollections.ApplicationUser", null)
//                        .WithMany()
//                        .HasForeignKey("UserId")
//                        .OnDelete(DeleteBehavior.Cascade)
//                        .IsRequired();
//                });

//            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
//                {
//                    b.HasOne("Bahrin.Harbour.Data.DBCollections.ApplicationUser", null)
//                        .WithMany()
//                        .HasForeignKey("UserId")
//                        .OnDelete(DeleteBehavior.Cascade)
//                        .IsRequired();
//                });

//            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
//                {
//                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
//                        .WithMany()
//                        .HasForeignKey("RoleId")
//                        .OnDelete(DeleteBehavior.Cascade)
//                        .IsRequired();

//                    b.HasOne("Bahrin.Harbour.Data.DBCollections.ApplicationUser", null)
//                        .WithMany()
//                        .HasForeignKey("UserId")
//                        .OnDelete(DeleteBehavior.Cascade)
//                        .IsRequired();
//                });

//            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
//                {
//                    b.HasOne("Bahrin.Harbour.Data.DBCollections.ApplicationUser", null)
//                        .WithMany()
//                        .HasForeignKey("UserId")
//                        .OnDelete(DeleteBehavior.Cascade)
//                        .IsRequired();
//                });

//            modelBuilder.Entity("Bahrin.Harbour.Data.DBCollections.ApplicationUser", b =>
//                {
//                    b.Navigation("UserOutlets");
//                });

//            modelBuilder.Entity("Bahrin.Harbour.Data.DBCollections.Outlet", b =>
//                {
//                    b.Navigation("UserOutlets");
//                });

//            modelBuilder.Entity("Bahrin.Harbour.Model.ClientModel.Client", b =>
//                {
//                    b.Navigation("Properties");
//                });
//#pragma warning restore 612, 618
//        }
//    }
//}
