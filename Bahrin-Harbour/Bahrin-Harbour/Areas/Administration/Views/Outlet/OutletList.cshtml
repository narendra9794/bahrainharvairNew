@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
<style>
  #Outlet-list-table_paginate {
    position: absolute;
    bottom: -10%;
    right: 8%;
  }

  #Outlet-list-table_info {
    position: absolute;
    bottom: -6%;
    left: 17%;
  }

  #Outlet-list-table {
    border: 1px solid #cfcece;
    border-radius: 28px;
    padding: 10px;
    margin-top: 40px;
    box-sizing: auto;
  }
</style>
<table class="table align-middle mb-0" id="Outlet-list-table">
  <thead class="table-light">
    <tr>
     @*  <th></th> *@
      <th>Outlets Name</th>
      <th>Outlets Location</th>
      <th>Discount </th>
      <th>Representative Name</th>
      <th>Status</th>
      <th>Action</th>
    </tr>
  </thead> 
</table>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.js"></script>
<link href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css" rel="stylesheet" />
<script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>

<script>

  $(document).ready(function () {
    BindOutlet();
  });
  function BindOutlet() {
    debugger;
    var table = $("#Outlet-list-table").DataTable({
      oLanguage: { sProcessing: "<div id='DataTable-loader'></div>" },
      initComplete: function () {       
        var searchInput = $('#Outlet-list-table_filter input');
        searchInput.attr('placeholder', 'Search...');

      },

      "sAjaxSource": "@Url.Action("GetAllOutlets", "Outlet")",
      "dom": 'fpi',
      "order": [[4, "desc"]],
      "aoColumns": [
        
        {
          "sName": "Name",
          "render": function (data, type, full, meta) {
            var strString = '';
            strString += full[1];
            return strString;
          }
        },
        {
          "sName": "Country",
          "render": function (data, type, full, meta) {
            var strString = '';
            strString += full[2];
            return strString;
          }
        },
        {
          "sName": "DiscountPercentage",
          "render": function (data, type, full, meta) {
            var strString = '';
            strString += full[3];
            return strString;
          }
        },
        {
          "sName": "RepresentativeName",
          "render": function (data, type, full, meta) {
            var strString = '';
            var defaultImage = "/Images/profile2.png";

            if (!full[6] || full[6].trim() === "" ) {
              
                strString += '<img src="' + defaultImage + '" alt="avatar-2" style="width: 30px; height: 30px; border-radius: 50%; margin-right: 5px;">';
              } else {
                strString += '<img src="' + full[6] + '" alt="avatar-2" style="width: 30px; height: 30px; border-radius: 50%; margin-right: 5px;">';
              }
              strString += full[4];
                       
            
            return strString;
          }
        },        
        {
          "sName": "AciveStatus",
          // "bSearchable": false,
          "bSortable": false,
          "render": function (data, type, full, meta) {
            var strString = '';
            if (full[5] == "True") {
              strString += '<div class="form-check form-switch">';
              strString += '  <input class="form-check-input" type="checkbox" checked onclick=ChangeOutletStatus(\'' + full[0] + '\',false)>';
              strString += '</div>';
            } else {
              strString += '<div class="form-check form-switch">';
              strString += '  <input class="form-check-input" type="checkbox" onclick=ChangeOutletStatus(\'' + full[0] + '\',true)>';
              strString += '</div>';
            }
            return strString;
          }
        },
         {
          "sName": "AciveStatus",
          // "bSearchable": false,
          "bSortable": false,
          "render": function (data, type, full, meta) {
            var strString = '';
            strString += '&nbsp;<a class="lni lni-eye font-20 btn btn-sm btn-primary"" href="@Url.Action("ViewOutlet", "Outlet")?Id=' + full[0] + '"  title="Detail"><i class="fa fa-list"></i></a>';
            strString += '&nbsp;<a class="fadeIn animated bx bx-pencil btn btn-sm btn-success" href="@Url.Action("CreateOrUpdateOutlet", "Outlet")?Id=' + full[0] + '", title="Edit"><i class="fas fa-pencil-alt"></i></a>';
            strString += '&nbsp;<a class="fadeIn animated bx bx-trash btn btn-sm btn-danger"  onclick="DeleteOutlet(\'' + full[0] + '\')" title="Delete"><i class="fa fa-trash"></i></a>';
            return strString
          },
          "bSortable": true
         }

        

      ]

    });
  }
  function ChangeOutletStatus(Id, isActivate) {
    var userId = Id;
    debugger;

    $.confirm({
      icon: 'fa fa-warning',
      title: isActivate ? 'Activate..!' : 'Deactive..!',
      content: `Are you sure you want to ${isActivate ? 'Activate' : 'Deactivate'} this Outlet? <br/>Do you want to continue?`,
      buttons: {
        '<i class="fa fa-check-circle"></i> Confirm': function () {
          if (String(userId) != '0') {
            debugger;
            $.ajax({             
              url: '@Url.Action("ChangeOutletStatus", "Outlet")',
              type: "POST",
              data: { Id: userId },
              data: { Id: userId, activate: isActivate },
              dataType: "json",
              async: false,
              success: function (response) {                
                if (response.status == true) {
                  toasterSuccessMessage(response.message);
                  $('#Outlet-list-table').dataTable().fnDraw(false);
                  //BindVisitorPurpose();
                  BindOutlet();
                  return false;
                }
                else {
                  toasterErrorMessage(response.message);
                  //    toasterErrorMessage("Error");
                  StopDataLoader();
                }
              },
              failure: function () {
                toasterErrorMessage("Error");
                StopDataLoader();
              }
            });
          }
          return true;
        },
        '<i class="fa fa-times-circle"></i> Cancel': function () {
          // return false;
        }
      }
    });
  }

  function toasterSuccessMessage(message) {
    toastr.success(message);
  }
  function DeleteOutlet(Id) {
    var UserId = Id;
    debugger;
    $.confirm({
      icon: 'fa fa-warning',
      title: 'Delete..!',
      content: "You are want to Delete this Outlet. <br/>Do you want to Continue?",
      buttons: {
        '<i class="fa fa-check-circle"></i> Confirm': function () {
          if (String(UserId) != '0') {
            $.ajax({
              url: '@Url.Action("DeleteOutletById", "Outlet")',
              type: "POST",
              data: { Id: UserId },
              dataType: "json",
              async: false,
              success: function (response) {
                debugger
                if (response.status == true) {
                  toasterSuccessMessage(response.message);
                  $('#Outlet-list-table').dataTable().fnDraw(false);
                  //BindVisitorPurpose();
                  BindOutlet();
                  return false;
                }
                else {
                  toasterErrorMessage(response.message);
                  //    toasterErrorMessage("Error");
                  StopDataLoader();
                }
              },
              failure: function (response) {
                toasterErrorMessage("Error");
                StopDataLoader();
              }
            });
          }
          return true;
        },
        '<i class="fa fa-times-circle"></i> Cancel': function () {
          //return false;
        }
      }
    });
  }

</script>
